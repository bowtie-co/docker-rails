# Use Bowtie Ruby base image (includes jemalloc)
FROM ruby:2.7-slim

# Baller maintainers
LABEL maintainer "Charlie McClung <charlie@bowtie.co>, Brandon Cabael <brandon@bowtie.co>"

# Set APT config overrides (helps build reliability)
ENV APT_HTTP_TIMEOUT 30
ENV APT_FTP_TIMEOUT 30
ENV APT_NUM_RETRIES 3

# Set EDITOR default to vim (used when editing env via sops)
ENV EDITOR vim

# Create dir for shared scripts
RUN mkdir -p /scripts

# Use generic /app path for working directory
ENV INSTALL_PATH /app
RUN mkdir -p $INSTALL_PATH
WORKDIR $INSTALL_PATH

ENV SOPS_SHA affb3dd327f53a34cc9f9535991a21926985424365d6e6d4c18544e93ad4e02d
ENV NODE_SHA b96cee1dee980102e4a74de64663b2f0424fac8058847c64d48c8684984442a6

# Download installers for sops and node 8.x
ADD https://github.com/mozilla/sops/releases/download/v3.7.1/sops_3.7.1_amd64.deb /tmp/sops.deb
ADD https://deb.nodesource.com/setup_14.x /tmp/node.sh

# Generate manual apt conf overrides (from env vars above)
RUN echo 'Acquire::http::Timeout "${APT_HTTP_TIMEOUT}";' > /etc/apt/apt.conf.d/99-timeout && \
      echo 'Acquire::ftp::Timeout "${APT_FTP_TIMEOUT}";' >> /etc/apt/apt.conf.d/99-timeout && \
      echo 'APT::Acquire::Retries "${APT_NUM_RETRIES}";' > /etc/apt/apt.conf.d/80-retries

# Run system package installations
RUN set -ex && \
      # Verify downloaded sops.deb SHA
      echo "$SOPS_SHA /tmp/sops.deb" | sha256sum -c - && \
      # Verify downloaded node.sh SHA
      echo "$NODE_SHA /tmp/node.sh" | sha256sum -c - && \
      # Update apt-get and start install cmd
      apt-get update && apt-get install -qq -y --no-install-recommends \
      # Basic required packages for all rails images
      build-essential git vim gnupg2 && \
      # Install sops from downloaded .deb file
      dpkg -i /tmp/sops.deb && \
      # Install node (only installs 8.x apt repo & key)
      cat /tmp/node.sh | bash && \
      # Run install again for nodejs (after running node.sh, this will install 8.x)
      apt-get install -qq -y -f --no-install-recommends nodejs && \
      # Update bundler gem
      gem install bundler && \
      # Remove tmp install files
      rm /tmp/sops.deb && \
      rm /tmp/node.sh

RUN set -ex && \
      # Placeholder for conditional packages (changes based on variant, generated by update.sh)
      apt-get install -qq -y --no-install-recommends default-libmysqlclient-dev

COPY vimrc /root/.vimrc

COPY *.sh /scripts/

ENTRYPOINT [ "/scripts/docker-entrypoint.sh" ]

CMD bundle exec puma -C config/puma.rb
